---
name: "tests"
on:
  push:
    branches: [main]
    paths:
      - "**/*.bash"
      - "**/*.bats"
      - "**/*.nix"

  pull_request:
    paths:
      - "**/*.bash"
      - "**/*.bats"
      - "**/*.nix"

concurrency:
  group: tests-${{ github.ref }}
  cancel-in-progress: true

jobs:
  flake:
    runs-on: [ubuntu-latest]
    steps:
      - name: "checkout repository"
        uses: actions/checkout@v3

      - name: "setup nix on the runner"
        uses: cachix/install-nix-action@v18
        with:
          extra_nix_config: |-
            access-tokens = github.com=${{ secrets.PUBLIC_GH_TOKEN }}
            system-features = nixos-test benchmark big-parallel kvm

      - name: "evaluation flake packages derivations"
        run: |-
          nix eval --json \
          --impure \
          --expr '(builtins.getFlake (builtins.toString ./.)).outputs.packages'
        # ^ we need the --impure flag to be able to get the flake

  pre-commit:
    runs-on: [ubuntu-latest]
    steps:
      - name: "checkout project"
        uses: actions/checkout@v3

      - name: "setup nix on the runner"
        uses: cachix/install-nix-action@v18
        with:
          extra_nix_config: |-
            access-tokens = github.com=${{ secrets.PUBLIC_GH_TOKEN }}
            system-features = benchmark big-parallel

      - name: "run pre-commit checks"
        run: |-
          export TERM=xterm-256color
          nix develop --accept-flake-config -c make pre-commit

  bats-tests:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: "checkout project"
        uses: actions/checkout@v3

      - name: "setup nix on the runner"
        uses: cachix/install-nix-action@v18
        with:
          extra_nix_config: |-
            access-tokens = github.com=${{ secrets.PUBLIC_GH_TOKEN }}
            system-features = benchmark big-parallel

      - name: "run build with tests"
        run: |-
          export TERM=xterm-256color
          nix -L build
